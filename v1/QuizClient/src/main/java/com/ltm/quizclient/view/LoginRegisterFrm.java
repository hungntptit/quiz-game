/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ltm.quizclient.view;

import com.ltm.model.ObjectWrapper;
import com.ltm.model.User;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author hung
 */
public class LoginRegisterFrm extends javax.swing.JFrame {

    // panelLogin components
    private JLabel lblLoginUsername;
    private JLabel lblLoginPassword;
    private JTextField txtLoginUsername;
    private JPasswordField txtLoginPassword;
    private JButton btnLogin;

    // panelRegister components
    private JLabel lblRegisterUsername;
    private JLabel lblRegisterPassword;
    private JLabel lblRegisterConfirm;
    private JTextField txtRegisterUsername;
    private JPasswordField txtRegisterPassword;
    private JPasswordField txtRegisterConfirm;
    private JButton btnRegister;

    private JTabbedPane panel;
    private JPanel panelLogin;
    private JPanel panelRegister;

    /**
     * Creates new form LoginFrm
     */
    public LoginRegisterFrm() {
//        initComponents();
        panel = new JTabbedPane();

        loadPanelLogin();
        loadPanelRegister();

        panel.addTab("Login", panelLogin);
        panel.addTab("Register", panelRegister);

        this.setTitle("Login/Register");
        this.setContentPane(panel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setMinimumSize(this.getPreferredSize());
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginRegisterFrm().setVisible(true);
            }
        });
    }

    private void loadPanelLogin() {

        lblLoginUsername = new JLabel("Username");
        lblLoginPassword = new JLabel("Password");
        txtLoginUsername = new JTextField(20);
        txtLoginPassword = new JPasswordField(20);

        btnLogin = new JButton("Login");

        btnLogin.addActionListener((ActionEvent e) -> {
            String username = txtLoginUsername.getText();
            String password = txtLoginPassword.getText();
            //                JOptionPane.showMessageDialog(rootPane, username);
//                clientController.sendData(new ObjectWrapper(ObjectWrapper.LOGIN_USER, new User(username, password)));
            try {
                Socket s = new Socket(InetAddress.getByName("localhost"), 5056);
                ObjectOutputStream oos = new ObjectOutputStream(s.getOutputStream());
                oos.writeObject(new ObjectWrapper(ObjectWrapper.LOGIN_USER, new User(username, password)));
                ObjectInputStream ois = new ObjectInputStream(s.getInputStream());
                ObjectWrapper ow = (ObjectWrapper) ois.readObject();
                User u = (User) ow.getData();
                System.out.println(u.getId());
                if (u.getId() != 0) {
                    JOptionPane.showMessageDialog(rootPane, "success");
                    new CreateJoinRoomFrm(u).setVisible(true);
                    ((LoginRegisterFrm) rootPane.getParent()).dispose();;
                } else {
                    JOptionPane.showMessageDialog(rootPane, "failed");
                }

            } catch (UnknownHostException ex) {
                Logger.getLogger(LoginRegisterFrm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(LoginRegisterFrm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(LoginRegisterFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        });

        panelLogin = new JPanel(new MigLayout());
//        panelLogin.setBorder(BorderFactory.createTitledBorder("Login"));

        panelLogin.add(lblLoginUsername, "align label");
        panelLogin.add(txtLoginUsername, "wrap,span,pushx,growx");

        panelLogin.add(lblLoginPassword, "align label");
        panelLogin.add(txtLoginPassword, "wrap,span,pushx,growx");

        panelLogin.add(btnLogin, "skip, al right");
    }

    private void loadPanelRegister() {
        lblRegisterUsername = new JLabel("Username");
        lblRegisterPassword = new JLabel("Password");
        lblRegisterConfirm = new JLabel("Confirm Password");

        txtRegisterUsername = new JTextField(20);
        txtRegisterPassword = new JPasswordField(20);
        txtRegisterConfirm = new JPasswordField(20);

        btnRegister = new JButton("Register");

        btnRegister.addActionListener((ActionEvent e) -> {
            String username = txtRegisterUsername.getText();
            String password = txtRegisterPassword.getText();
            String confirmPassword = txtRegisterConfirm.getText();
            if (!password.equals(confirmPassword)) {
                JOptionPane.showMessageDialog(rootPane, "confirm password not match");
                return;
            }
            //                JOptionPane.showMessageDialog(rootPane, username);
//                clientController.sendData(new ObjectWrapper(ObjectWrapper.LOGIN_USER, new User(username, password)));
            try {
                Socket s = new Socket(InetAddress.getByName("localhost"), 5056);
                ObjectOutputStream oos = new ObjectOutputStream(s.getOutputStream());
                oos.writeObject(new ObjectWrapper(ObjectWrapper.REGISTER_USER, new User(username, password)));
                ObjectInputStream ois = new ObjectInputStream(s.getInputStream());
                ObjectWrapper ow = (ObjectWrapper) ois.readObject();
                boolean b = (boolean) ow.getData();
                System.out.println(b);
                if (b) {
                    JOptionPane.showMessageDialog(rootPane, "success");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "failed");
                }

            } catch (UnknownHostException ex) {
                Logger.getLogger(LoginRegisterFrm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(LoginRegisterFrm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(LoginRegisterFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        });

        panelRegister = new JPanel(new MigLayout());
//        panelRegister.setBorder(BorderFactory.createTitledBorder("Register"));

        panelRegister.add(lblRegisterUsername, "align label");
        panelRegister.add(txtRegisterUsername, "wrap,span,pushx,growx");

        panelRegister.add(lblRegisterPassword, "align label");
        panelRegister.add(txtRegisterPassword, "wrap,span,pushx,growx");

        panelRegister.add(lblRegisterConfirm, "align label");
        panelRegister.add(txtRegisterConfirm, "wrap,span,pushx,growx");

        panelRegister.add(btnRegister, "skip, al right");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
